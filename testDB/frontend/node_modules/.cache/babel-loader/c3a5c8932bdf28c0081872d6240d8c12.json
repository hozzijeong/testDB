{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TutorialDataService from \"../Service/TutorialService\";\n\nconst Tutorial = props => {\n  _s();\n\n  const initialTutorialState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentTutorial, setCurrentTutorial] = useState(initialTutorialState);\n  const [message, setMessage] = useState(\"\");\n\n  const getTutorial = id => {\n    TutorialDataService.get(id).then(response => {\n      setCurrentTutorial(response.data);\n      console.log(response.data, \"getTutorialData\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getTutorial(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCurrentTutorial({ ...currentTutorial,\n      [name]: value\n    });\n  };\n\n  const updatePublished = status => {\n    const data = {\n      id: currentTutorial.id,\n      title: currentTutorial.title,\n      description: currentTutorial.description,\n      published: status\n    };\n    TutorialDataService.update(currentTutorial.id, data).then(response => {\n      setCurrentTutorial({ ...currentTutorial,\n        published: status\n      });\n      console.log(response.data, \"updateData\");\n    }).catch(e => {\n      console.lpg(e);\n    });\n  };\n\n  const updateTutorial = () => {\n    TutorialDataService.update(currentTutorial.id, currentTutorial).then(response => {\n      console.log(response.data);\n      setMessage(\"The tutirial was updated successfully!\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteTutorial = () => {\n    TutorialDataService.remove(currentTutorial.id).then(response => {\n      console.log(response.data, \"deleteData\");\n      props.history.push(\"/tutorial\"); // 해당 정보 삭제 후 callback\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n};\n\n_s(Tutorial, \"wpMCK7B7WJn9M2GZ/DJyrEkTKg8=\");\n\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["C:/Hozzi/Programing/Web/testDB/testdb/frontend/src/Components/Tutorial.js"],"names":["React","useState","useEffect","TutorialDataService","Tutorial","props","initialTutorialState","id","title","description","published","currentTutorial","setCurrentTutorial","message","setMessage","getTutorial","get","then","response","data","console","log","catch","e","match","params","handleInputChange","event","name","value","target","updatePublished","status","update","lpg","updateTutorial","deleteTutorial","remove","history","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport TutorialDataService from \"../Service/TutorialService\"\r\n\r\nconst Tutorial = props => {\r\n    const initialTutorialState = {\r\n        id : null,\r\n        title : \"\",\r\n        description: \"\",\r\n        published: false\r\n    }\r\n    const [currentTutorial,setCurrentTutorial] = useState(initialTutorialState)\r\n    const [message,setMessage] = useState(\"\")\r\n\r\n    const getTutorial = id =>{\r\n        TutorialDataService.get(id)\r\n        .then( response =>{\r\n            setCurrentTutorial(response.data);\r\n            console.log(response.data,\"getTutorialData\")\r\n        })\r\n        .catch(e =>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTutorial(props.match.params.id)\r\n    },[props.match.params.id])\r\n\r\n    const handleInputChange = event => {\r\n        const {name, value} = event.target;\r\n        setCurrentTutorial({...currentTutorial, [name]:value})\r\n    }\r\n    const updatePublished = status =>{\r\n        const data ={\r\n            id :currentTutorial.id,\r\n            title: currentTutorial.title,\r\n            description: currentTutorial.description,\r\n            published: status\r\n        }\r\n\r\n        TutorialDataService.update(currentTutorial.id,data)\r\n        .then(response => {\r\n            setCurrentTutorial({...currentTutorial, published:status})\r\n            console.log(response.data, \"updateData\")\r\n        })\r\n        .catch(e => {\r\n            console.lpg(e)\r\n        })\r\n    }\r\n\r\n    const updateTutorial = () =>{\r\n        TutorialDataService.update(currentTutorial.id, currentTutorial)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setMessage(\"The tutirial was updated successfully!\")\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    const deleteTutorial = () => {\r\n        TutorialDataService.remove(currentTutorial.id)\r\n        .then(response => {\r\n            console.log(response.data, \"deleteData\")\r\n            props.history.push(\"/tutorial\"); // 해당 정보 삭제 후 callback\r\n        })\r\n        .catch(e =>{\r\n            console.log(e)\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}